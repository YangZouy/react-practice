{"ast":null,"code":"// 补充了actionCreator\n// 主要定义了操作的类型并且进行暴露\n\nimport { DECREMENT, INCREMENT } from \"./constant\";\nimport store from \"./store\";\nexport const createIncrementAction = data => ({\n  type: INCREMENT,\n  data\n});\nexport const createDecrementAction = data => ({\n  type: DECREMENT,\n  data\n});\n// 这里是异步action 与一般action的区别就是它返回的是一个函数\nexport const createIncreamentAsyncAction = data => {\n  return () => {\n    setTimeout(() => {\n      store.dispatch(createIncrementAciton(data));\n    }, 500);\n  };\n};","map":{"version":3,"names":["DECREMENT","INCREMENT","store","createIncrementAction","data","type","createDecrementAction","createIncreamentAsyncAction","setTimeout","dispatch","createIncrementAciton"],"sources":["D:/react-practice/redux-practice/src/redux/count_action.js"],"sourcesContent":["// 补充了actionCreator\r\n// 主要定义了操作的类型并且进行暴露\r\n\r\nimport { DECREMENT, INCREMENT } from \"./constant\"\r\nimport store from \"./store\"\r\n\r\nexport const createIncrementAction = (data) => ({type:INCREMENT,data})\r\nexport const createDecrementAction = (data) => ({type:DECREMENT,data})\r\n// 这里是异步action 与一般action的区别就是它返回的是一个函数\r\nexport const createIncreamentAsyncAction = (data) => {\r\n  return () => {\r\n    setTimeout(()=>{\r\n      store.dispatch(createIncrementAciton(data));\r\n    },500)\r\n  }\r\n}"],"mappings":"AAAA;AACA;;AAEA,SAASA,SAAS,EAAEC,SAAS,QAAQ,YAAY;AACjD,OAAOC,KAAK,MAAM,SAAS;AAE3B,OAAO,MAAMC,qBAAqB,GAAIC,IAAI,KAAM;EAACC,IAAI,EAACJ,SAAS;EAACG;AAAI,CAAC,CAAC;AACtE,OAAO,MAAME,qBAAqB,GAAIF,IAAI,KAAM;EAACC,IAAI,EAACL,SAAS;EAACI;AAAI,CAAC,CAAC;AACtE;AACA,OAAO,MAAMG,2BAA2B,GAAIH,IAAI,IAAK;EACnD,OAAO,MAAM;IACXI,UAAU,CAAC,MAAI;MACbN,KAAK,CAACO,QAAQ,CAACC,qBAAqB,CAACN,IAAI,CAAC,CAAC;IAC7C,CAAC,EAAC,GAAG,CAAC;EACR,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}