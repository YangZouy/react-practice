{"ast":null,"code":"// 这里是Count的容器组件 这部分组件不需要自己写 \n// 主要是采用下载的react-redux库来进行编写\n// 容器组件主要是与UI组件和redux进行交互的\n// 因此需要首先引入这两部分\n\nimport CountUI from '../../components/Count';\nimport { connect } from 'react-redux';\n\n// 与UI交互主要靠的是父子之间传值 props\n// 与redux传值主要是靠store\n// 下面两个函数的返回值都是对象\n\nfunction mapStateToProps(state) {\n  // 从redux中获取到状态\n  // 将状态传递给UI组件\n  return {\n    count: state\n  };\n}\nfunction mapDispatchToProps() {\n  return {};\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI);","map":{"version":3,"names":["CountUI","connect","mapStateToProps","state","count","mapDispatchToProps"],"sources":["D:/react-practice/redux-practice/src/containers/Count/index.jsx"],"sourcesContent":["// 这里是Count的容器组件 这部分组件不需要自己写 \r\n// 主要是采用下载的react-redux库来进行编写\r\n// 容器组件主要是与UI组件和redux进行交互的\r\n// 因此需要首先引入这两部分\r\n\r\nimport CountUI from '../../components/Count'\r\nimport { connect } from 'react-redux'\r\n\r\n// 与UI交互主要靠的是父子之间传值 props\r\n// 与redux传值主要是靠store\r\n// 下面两个函数的返回值都是对象\r\n\r\nfunction mapStateToProps(state) {\r\n  // 从redux中获取到状态\r\n  // 将状态传递给UI组件\r\n  return {count: state}\r\n}\r\n\r\nfunction mapDispatchToProps() {\r\n  return {\r\n\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CountUI);"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C,SAASC,OAAO,QAAQ,aAAa;;AAErC;AACA;AACA;;AAEA,SAASC,eAAeA,CAACC,KAAK,EAAE;EAC9B;EACA;EACA,OAAO;IAACC,KAAK,EAAED;EAAK,CAAC;AACvB;AAEA,SAASE,kBAAkBA,CAAA,EAAG;EAC5B,OAAO,CAEP,CAAC;AACH;AACA,eAAeJ,OAAO,CAACC,eAAe,EAACG,kBAAkB,CAAC,CAACL,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}