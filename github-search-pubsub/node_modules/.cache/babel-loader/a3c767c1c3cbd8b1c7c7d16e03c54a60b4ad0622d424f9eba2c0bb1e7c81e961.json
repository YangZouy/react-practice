{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-practice\\\\github-search-pubsub\\\\src\\\\components\\\\Search\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n// 使用pubsub\nimport PubSub from 'pubsub-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor(...args) {\n    super(...args);\n    // 通过search组件将数据传递给List组件进行展示\n    // 使用消息订阅机制\n    // 发布消息的一方\n    this.search = () => {\n      //获取用户的输入(连续解构赋值+重命名)\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this;\n      // console.log(keyWord)\n      // this.props.updateAppState({isFirst:false,isLoading:true})\n      PubSub.publish('update', {\n        isFirst: false,\n        isLoading: true\n      });\n      //发送网络请求\n      axios.get(`/api1/search/users?q=${keyWord}`).then(response => {\n        // 调用App中的方法\n        // this.props.updateAppState({isLoading:false,personObj:response.data.items})\n        PubSub.publish('update', {\n          isLoading: false,\n          personObj: response.data.items\n        });\n      }, error => {\n        //请求失败后通知App更新状态\n        // this.props.updateAppState({isLoading:false,err:error.message})\n        PubSub.publish('update', {\n          isLoading: false,\n          err: error.message\n        });\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"\\u641C\\u7D22github\\u7528\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => this.keyWordElement = c,\n          type: \"text\",\n          placeholder: \"\\u8F93\\u5165\\u5173\\u952E\\u8BCD\\u70B9\\u51FB\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","PubSub","jsxDEV","_jsxDEV","Search","constructor","args","search","keyWordElement","value","keyWord","publish","isFirst","isLoading","get","then","response","personObj","data","items","error","err","message","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","c","type","placeholder","onClick"],"sources":["D:/react-practice/github-search-pubsub/src/components/Search/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n// 使用pubsub\r\nimport PubSub from 'pubsub-js'\r\n\r\nexport default class Search extends Component {\r\n\r\n  // 通过search组件将数据传递给List组件进行展示\r\n  // 使用消息订阅机制\r\n  // 发布消息的一方\r\n\r\n\tsearch = ()=>{\r\n\r\n\t\t//获取用户的输入(连续解构赋值+重命名)\r\n\t\tconst {keyWordElement:{value:keyWord}} = this\r\n    // console.log(keyWord)\r\n    // this.props.updateAppState({isFirst:false,isLoading:true})\r\n    PubSub.publish('update', {isFirst:false,isLoading:true})\r\n\t\t//发送网络请求\r\n\t\taxios.get(`/api1/search/users?q=${keyWord}`).then(\r\n\t\t\tresponse => {\r\n        // 调用App中的方法\r\n        // this.props.updateAppState({isLoading:false,personObj:response.data.items})\r\n        PubSub.publish('update', {isLoading:false,personObj:response.data.items})\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\t//请求失败后通知App更新状态\r\n\t\t\t\t// this.props.updateAppState({isLoading:false,err:error.message})\r\n        PubSub.publish('update', {isLoading:false,err:error.message})\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section className=\"jumbotron\">\r\n\t\t\t\t<h3 className=\"jumbotron-heading\">搜索github用户</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input ref={c => this.keyWordElement = c} type=\"text\" placeholder=\"输入关键词点击搜索\"/>&nbsp;\r\n\t\t\t\t\t<button onClick={this.search}>搜索</button>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,MAAM,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,MAAMC,MAAM,SAASL,SAAS,CAAC;EAAAM,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAE5C;IACA;IACA;IAAA,KAEDC,MAAM,GAAG,MAAI;MAEZ;MACA,MAAM;QAACC,cAAc,EAAC;UAACC,KAAK,EAACC;QAAO;MAAC,CAAC,GAAG,IAAI;MAC3C;MACA;MACAT,MAAM,CAACU,OAAO,CAAC,QAAQ,EAAE;QAACC,OAAO,EAAC,KAAK;QAACC,SAAS,EAAC;MAAI,CAAC,CAAC;MAC1D;MACAb,KAAK,CAACc,GAAG,CAAE,wBAAuBJ,OAAQ,EAAC,CAAC,CAACK,IAAI,CAChDC,QAAQ,IAAI;QACP;QACA;QACAf,MAAM,CAACU,OAAO,CAAC,QAAQ,EAAE;UAACE,SAAS,EAAC,KAAK;UAACI,SAAS,EAACD,QAAQ,CAACE,IAAI,CAACC;QAAK,CAAC,CAAC;MAC9E,CAAC,EACDC,KAAK,IAAI;QACR;QACA;QACInB,MAAM,CAACU,OAAO,CAAC,QAAQ,EAAE;UAACE,SAAS,EAAC,KAAK;UAACQ,GAAG,EAACD,KAAK,CAACE;QAAO,CAAC,CAAC;MAClE,CACD,CAAC;IACF,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IACR,oBACCpB,OAAA;MAASqB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC7BtB,OAAA;QAAIqB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjD1B,OAAA;QAAAsB,QAAA,gBACCtB,OAAA;UAAO2B,GAAG,EAAEC,CAAC,IAAI,IAAI,CAACvB,cAAc,GAAGuB,CAAE;UAACC,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,QAC/E,eAAA1B,OAAA;UAAQ+B,OAAO,EAAE,IAAI,CAAC3B,MAAO;UAAAkB,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEZ;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}